{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "existingVnetName": {
            "type": "string",
            "defaultValue": "stackvnet",
            "metadata": {
                "description": "Existing virtual network name"
            }
        },
        "newSubnetName": {
            "type": "string",
            "defaultValue": "auxsubset",
            "metadata": {
                "description": "New subnet name"
            }
        },
        "newSubnetAddressPrefix": {
            "type": "string",
            "defaultValue": "10.0.1.0/24",
            "metadata": {
                "description": "New subnet address prefix"
            }
        },
        "storageAccountName": {
            "type": "string",
            "metadata": {
                "description": "Unique name of the new storage account"
            }
        },
        "vmNames": {
            "type": "string",
            "metadata": {
                "description": "Comma-delimited virtual machine names"
            }
        },
        "vmIPs": {
            "type": "string",
            "metadata": {
                "description": "Comma-delimited virtual machine private IP addresses"
            }
        },
        "vmSize": {
            "type": "string",
            "defaultValue": "Standard_A1",
            "metadata": {
                "description": "Virtual machine size"
            }
        },
        "tshirtSize": {
            "type": "string",
            "defaultValue": "Test",
            "allowedValues": [
                "Test",
                "ProdStandard",
                "ProdLarge"
            ],
            "metadata": {
                "description": "T-shirt size of the IoT hub"
            }
        },
        "adminUsername": {
            "type": "string",
            "defaultValue": "azureuser",
            "metadata": {
                "description": "Virtual machine admin username"
            }
        },
        "adminPassword": {
            "type": "securestring",
            "metadata": {
                "description": "Virtual machine admin password"
            }
        },
        "templateBaseUrl": {
            "type": "string",
            "metadata": {
                "description": "ARM template base URL"
            }
        },
        "replicaSetName": {
            "type": "string",
            "defaultValue": "rs0",
            "metadata": {
                "description": "The name of the MongoDB replica set"
            }
        },
        "replicaSetKey": {
            "type": "string",
            "metadata": {
                "description": "The shared secret key for the MongoDB replica set"
            }
        },
        "kafkaPartitions": {
            "type": "int",
            "defaultValue": 16,
            "metadata": {
                "description": "Kafka default number of Partitions"
            }
        }
    },
    "variables": {
        "namespace": "tp",
        "nicName": "[concat(variables('namespace'), 'Nic')]",
        "subnetRef": "[concat(resourceId('Microsoft.Network/virtualNetworks', parameters('existingVnetName')), '/subnets/',  parameters('newSubnetName'))]",
        "imageReference": {
            "publisher": "Canonical",
            "offer": "UbuntuServer",
            "sku": "16.04-LTS",
            "version": "latest"
        },
        "diskSize": 1023,
        "vms": "[split(parameters('vmNames'), ',')]",
        "privateIps": "[split(parameters('vmIPs'), ',')]",
        "vmCount": "[length(variables('vms'))]",
        "tshirtSizeTest": {
            "zkVmIndexes": "0",
            "kafkaVmIndexes": "0",
            "redisVmIndexes": "0",
            "mongoVmIndexes": "0"
        },
        "tshirtSizeProdStandard": {
            "zkVmIndexes": "0,1,2",
            "kafkaVmIndexes": "0,1,2",
            "redisVmIndexes": "0,1,2",
            "mongoVmIndexes": "0,1,2"
        },
        "tshirtSizeProdLarge": {
            "zkVmIndexes": "0,1,2",
            "kafkaVmIndexes": "3,4,5",
            "redisVmIndexes": "0,1,2",
            "mongoVmIndexes": "0,1,2"
        },
        "tshirtSize": "[variables(concat('tshirtSize', parameters('tshirtSize')))]",
        "scripts": [
            "[concat(parameters('templateBaseUrl'), 'shared_scripts/ubuntu/vm-disk-utils-0.1.sh')]",
            "[concat(parameters('templateBaseUrl'), 'iot-stack-aux/su/entry.sh')]",
            "[concat(parameters('templateBaseUrl'), 'iot-stack-aux/su/zookeeper.sh')]",
            "[concat(parameters('templateBaseUrl'), 'iot-stack-aux/su/kafka.sh')]",
            "[concat(parameters('templateBaseUrl'), 'iot-stack-aux/su/redis-sentinel.sh')]",
            "[concat(parameters('templateBaseUrl'), 'iot-stack-aux/su/redis-sentinel-startup.sh')]",
            "[concat(parameters('templateBaseUrl'), 'iot-stack-aux/su/mongodb-ubuntu-install.sh')]"
        ]
    },
    "resources": [
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "name": "[concat(parameters('existingVnetName'), '/', parameters('newSubnetName'))]",
            "apiVersion": "2015-06-15",
            "location": "[resourceGroup().location]",
            "properties": {
                "addressPrefix": "[parameters('newSubnetAddressPrefix')]"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[parameters('storageAccountName')]",
            "apiVersion": "2016-01-01",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "Standard_LRS"
            },
            "kind": "Storage",
            "properties": {}
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[concat(variables('nicName'), copyindex())]",
            "apiVersion": "2015-06-15",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat(resourceId('Microsoft.Network/virtualNetworks', parameters('existingVnetName')), '/subnets/',  parameters('newSubnetName'))]"
            ],
            "copy": {
                "name": "nicCopyLoop",
                "count": "[variables('vmCount')]"
            },
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Static",
                            "privateIPAddress": "[variables('privateIps')[copyindex()]]",
                            "subnet": {
                                "id": "[variables('subnetRef')]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[variables('vms')[copyindex()]]",
            "apiVersion": "2017-03-30",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat('Microsoft.Storage/storageAccounts/', parameters('storageAccountName'))]",
                "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'), copyindex())]"
            ],
            "copy": {
                "name": "vmCopyLoop",
                "count": "[variables('vmCount')]"
            },
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('vmSize')]"
                },
                "osProfile": {
                    "computerName": "[variables('vms')[copyindex()]]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]"
                },
                "storageProfile": {
                    "imageReference": "[variables('imageReference')]",
                    "osDisk": {
                        "name": "[concat(variables('vms')[copyindex()], '-osdisk')]",
                        "caching": "ReadWrite",
                        "createOption": "FromImage",
                        "vhd": {
                            "uri": "[concat(reference(resourceId('Microsoft.Storage/storageAccounts/', parameters('storageAccountName'))).primaryEndpoints.blob, 'vhds/', variables('vms')[copyindex()], '-osdisk.vhd')]"
                        }
                    },
                    "dataDisks": [
                        {
                            "lun": 0,
                            "name": "[concat(variables('vms')[copyindex()], '-datadisk1')]",
                            "createOption": "Empty",
                            "caching": "ReadWrite",
                            "vhd": {
                                "uri": "[concat(reference(resourceId('Microsoft.Storage/storageAccounts/', parameters('storageAccountName'))).primaryEndpoints.blob, 'vhds/', variables('vms')[copyindex()], '-datadisk1.vhd')]"
                            },
                            "diskSizeGB": "[variables('diskSize')]"
                        }
                    ]
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('nicName'), copyindex()))]"
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "name": "[concat(variables('vms')[copyindex()], '/scripts')]",
            "apiVersion": "2017-12-01",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/', variables('vms')[copyindex()])]"
            ],
            "copy": {
                "name": "scriptCopyLoop",
                "count": "[variables('vmCount')]"
            },
            "properties": {
                "publisher": "Microsoft.Azure.Extensions",
                "type": "CustomScript",
                "typeHandlerVersion": "2.0",
                "autoUpgradeMinorVersion": true,
                "settings": {
                    "fileUris": "[variables('scripts')]",
                    "commandToExecute": "[concat('bash entry.sh -i ',copyindex(),' -n ', parameters('vmNames'),' -a ', parameters('vmIPs'), ' -z ', variables('tshirtSize').zkVmIndexes, ' -k ', variables('tshirtSize').kafkaVmIndexes, ' -r ', variables('tshirtSize').redisVmIndexes, ' -m ', variables('tshirtSize').mongoVmIndexes, ' -t ', parameters('replicaSetName'), ' -y ', parameters('replicaSetKey'), ' -u ', parameters('adminUsername'), ' -p ', parameters('adminPassword'), ' -x ', parameters('kafkaPartitions'))]"
                }
            }
        }
    ],
    "outputs": {
        "vmip": {
            "value": "[reference(concat(variables('nicName'),0)).ipConfigurations[0].properties.privateIPAddress]",
            "type": "string"
        }
    }
}