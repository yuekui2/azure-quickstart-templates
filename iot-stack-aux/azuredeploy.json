{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "storageAccountNamePrefix": {
            "type": "string",
            "defaultValue": "iotstackaux",
            "metadata": {
              "description": "Unique name of the new storage account that will be created to store virtual machine VHDs"
            }
          },
          "domainName": {
            "type": "string",
            "metadata": {
              "description": "Domain name of the public jumpbox"
            }
          },
          "adminUsername": {
            "type": "string",
            "defaultValue": "azureuser",
            "metadata": {
              "description": "Virtual machine administrator username"
            }
          },
          "adminPassword": {
            "type": "securestring",
            "metadata": {
              "description": "Virtual machine administrator password"
            }
          },
          "kafkaMajVersion" : {
            "type": "string",
            "defaultValue": "1.1.0",
            "allowedValues": [
              "1.1.0",
              "1.0.0"
            ],
            "metadata": {
              "description": "Kafka major version"
            }
          },
          "kafkaMinVersion" : {
            "type": "string",
            "defaultValue": "2.12",
            "allowedValues": [
              "2.12",
              "2.11",
              ""
            ],
            "metadata": {
              "description": "Kafka min version under major version"
            }
          },
          "tshirtSize": {
            "type": "string",
            "defaultValue": "Small",
            "allowedValues": [
              "Small"
            ],
            "metadata": {
              "description": "T-shirt size of the deployment"
            }
          },
          "virtualNetworkName": {
            "type": "string",
            "defaultValue": "vnet",
            "metadata": {
              "description": "Virtual network name"
            }
          },
          "repoUrl": {
            "type": "string",
            "defaultValue": "https://raw.githubusercontent.com/yuekui2/azure-quickstart-templates/master/",
            "metadata": {
              "description": "ARM template base URL"
            }
          }
    },
    "variables": {
      "templateBaseUrl": "[concat(parameters('repoUrl'), 'iot-stack-aux/')]",
      "sharedTemplateUrl": "[concat(variables('templateBaseUrl'), 'shared-resources.json')]",
      "tshirtSizeSmall": {
        "vmSize": "Standard_A1",
        "diskSize": 1023,
        "vmTemplate": "[concat(variables('templateBaseUrl'), 'datastore-2disk-resources.json')]",
        "zookeeperCount": 3,
        "brokerCount": 3,
        "storage": {
          "name": "[parameters('storageAccountNamePrefix')]",
          "count": 1,
          "pool": "db",
          "map": [
            0,
            0,
            0
          ],
          "jumpbox": 0
        }
      },
      "tshirtSize": "[variables(concat('tshirtSize', parameters('tshirtSize')))]",
      "vmTemplatezookeeper": "[concat(variables('templateBaseUrl'), 'zookeeper-resources.json')]",
      "osSettings": {
        "scripts": [
          "[concat(variables('templateBaseUrl'), 'kafka-cluster-install.sh')]",
          "[concat(parameters('repoUrl'), 'shared_scripts/ubuntu/vm-disk-utils-0.1.sh')]"
        ],
        "imageReference": {
          "publisher": "Canonical",
          "offer": "UbuntuServer",
          "sku": "16.04.4-LTS",
          "version": "latest"
        }
      },
      "networkSettings": {
        "vnetName": "[parameters('virtualNetworkName')]",
        "addressPrefix": "10.0.0.0/16",
        "subnets": {
          "dmz": {
            "name": "dmz",
            "prefix": "10.0.0.0/24",
            "vnet": "[parameters('virtualNetworkName')]"
          },
          "data": {
            "name": "data",
            "prefix": "10.0.2.0/24",
            "addprefix": "10.0.2.1",
            "vnet": "[parameters('virtualNetworkName')]"
          }
        }
      },
      "availabilitySetSettings": {
        "name": "kafkaAvailabilitySet",
        "fdCount": 3,
        "udCount": 5
      }
    },
    "resources": [
      {
        "name": "shared",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2015-01-01",
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[variables('sharedTemplateUrl')]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "storageSettings": {
              "value": "[variables('tshirtSize').storage]"
            },
            "networkSettings": {
              "value": "[variables('networkSettings')]"
            },
            "availabilitySetSettings": {
              "value": "[variables('availabilitySetSettings')]"
            }
          }
        }
      },
      {
        "name": "zookeeper-node",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2015-01-01",
        "dependsOn": [
          "[concat('Microsoft.Resources/deployments/', 'shared')]"
        ],
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[variables('vmTemplatezookeeper')]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "adminPassword": {
              "value": "[parameters('adminPassword')]"
            },
            "osSettings": {
              "value": "[variables('osSettings')]"
            },
            "subnet": {
              "value": "[variables('networkSettings').subnets.data]"
            },
            "dnsName": {
              "value": "[parameters('domainName')]"
            },
            "commonSettings": {
              "value": {
                "adminUsername": "[parameters('adminUsername')]",
                "namespace": "zk"
              }
            },
            "storageSettings": {
              "value": "[variables('tshirtSize').storage]"
            },
            "machineSettings": {
              "value": {
                "vmSize": "[variables('tshirtSize').vmSize]",
                "diskSize": "[variables('tshirtSize').diskSize]",
                "vmCount": "[variables('tshirtSize').zookeeperCount]",
                "availabilitySet": "[variables('availabilitySetSettings').name]",
                "addprefix": "[variables('networkSettings').subnets.zookeeper.addprefix]"
              }
            }
          }
        }
      },
      {
        "name": "broker-node",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2015-01-01",
        "dependsOn": [
          "[concat('Microsoft.Resources/deployments/', 'zookeeper-node')]"
        ],
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[variables('tshirtSize').vmTemplate]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "adminPassword": {
              "value": "[parameters('adminPassword')]"
            },
            "osSettings": {
              "value": "[variables('osSettings')]"
            },
            "subnet": {
              "value": "[variables('networkSettings').subnets.data]"
            },
            "dnsName": {
              "value": "[parameters('domainName')]"
            },
            "commonSettings": {
              "value": {
                "adminUsername": "[parameters('adminUsername')]",
                "namespace": "bk"
              }
            },
            "storageSettings": {
              "value": "[variables('tshirtSize').storage]"
            },
            "kafkaMajVersion" :{
              "value": "[parameters('kafkaMajVersion')]"
            },
            "kafkaMinVersion" :{
              "value": "[parameters('kafkaMinVersion')]"
            },
            "machineSettingsbroker": {
              "value": {
                "vmSize": "[variables('tshirtSize').vmSize]",
                "diskSize": "[variables('tshirtSize').diskSize]",
                "zookeeperCount": "[variables('tshirtSize').zookeeperCount]",
                "vmCount": "[variables('tshirtSize').brokerCount]",
                "availabilitySet": "[variables('availabilitySetSettings').name]",
                "zookeeperSubnet": "[variables('networkSettings').subnets.zookeeper.addprefix]",
                "addprefix": "[variables('networkSettings').subnets.data.addprefix]"
              }
            }
          }
        }
      }
    ],
    "outputs": {
      }
    }
}