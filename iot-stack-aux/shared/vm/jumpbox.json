{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "existingVnetName": {
            "type": "string",
            "defaultValue": "stackvnet",
            "metadata": {
                "description": "Existing virtual network name"
            }
        },
        "newSubnetName": {
            "type": "string",
            "defaultValue": "auxsubset",
            "metadata": {
                "description": "New subnet name"
            }
        },
        "newSubnetAddressPrefix": {
            "type": "string",
            "defaultValue": "10.0.1.0/24",
            "metadata": {
                "description": "New subnet address prefix"
            }
        },
        "storageAccountName": {
            "type": "string",
            "metadata": {
                "description": "Unique name of the new storage account"
            }
        },
        "vmNamePrefix": {
            "type": "string",
            "defaultValue": "auxvm",
            "metadata": {
                "description": "Virtual machine name prefix"
            }
        },
        "adminUsername": {
            "type": "string",
            "defaultValue": "azureuser",
            "metadata": {
                "description": "Virtual machine admin username"
            }
        },
        "adminPassword": {
            "type": "securestring",
            "metadata": {
                "description": "Virtual machine admin password"
            }
        },
        "namespace": {
            "type": "string",
            "defaultValue": "aux",
            "metadata": {
                "description": "Namespace for NIC etc"
            }
        },
        "dnsName": {
            "type": "string",
            "defaultValue": "jumpboxdns",
            "metadata": {
                "description": "DNS label prefix"
            }
        },
        "templateBaseUrl": {
            "type": "string",
            "metadata": {
                "description": "ARM template base URL"
            }
        }
    },
    "variables": {
        "availabilitySetSettings": {
            "name": "iotauxas",
            "fdCount": 3,
            "udCount": 5
        },
        "nicName": "[concat(parameters('namespace'), 'nic')]",
        "subnetRef": "[concat(resourceId('Microsoft.Network/virtualNetworks', parameters('existingVnetName')), '/subnets/',  parameters('newSubnetName'))]",
        "imageReference": {
            "publisher": "Canonical",
            "offer": "UbuntuServer",
            "sku": "16.04-LTS",
            "version": "latest"
        },
        "diskSize": 1023,
        "scripts": [
            "[concat(parameters('templateBaseUrl'), 'iot-stack-aux/shared/vm/vm.sh')]",
            "[concat(parameters('templateBaseUrl'), 'shared_scripts/ubuntu/vm-disk-utils-0.1.sh')]"
        ],
        "publicIpName": "[concat(parameters('namespace'), 'publicIp')]"
    },
    "resources": [
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "name": "[concat(parameters('existingVnetName'), '/', parameters('newSubnetName'))]",
            "apiVersion": "2017-10-01",
            "location": "[resourceGroup().location]",
            "properties": {
                "addressPrefix": "[parameters('newSubnetAddressPrefix')]"
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[variables('publicIpName')]",
            "apiVersion": "2017-10-01",
            "location": "[resourceGroup().location]",
            "properties": {
                "publicIPAllocationMethod": "Static",
                "dnsSettings": {
                    "domainNameLabel": "[parameters('dnsName')]"
                }
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[variables('nicName')]",
            "apiVersion": "2017-06-01",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat(resourceId('Microsoft.Network/virtualNetworks', parameters('existingVnetName')), '/subnets/',  parameters('newSubnetName'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIpName'))]"
                            },
                            "subnet": {
                                "id": "[variables('subnetRef')]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[concat(parameters('vmNamePrefix'))]",
            "apiVersion": "2017-03-30",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "Standard_A0"
                },
                "osProfile": {
                    "computerName": "[parameters('vmNamePrefix')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]"
                },
                "storageProfile": {
                    "imageReference": "[variables('imageReference')]",
                    "osDisk": {
                        "name": "[concat(parameters('vmNamePrefix'), '-osdisk')]",
                        "caching": "ReadWrite",
                        "createOption": "FromImage"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('nicName'))]"
                        }
                    ],
                    "inputEndpoints": [
                        {
                            "enableDirectServerReturn": "False",
                            "endpointName": "SSH",
                            "privatePort": 22,
                            "publicPort": 22,
                            "protocol": "tcp"
                        }
                    ]
                }
            }
        }
    ],
    "outputs": {}
}